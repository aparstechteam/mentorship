{"version":3,"sources":["webpack:///./src/views/Profile.vue?cf3b","webpack:///src/views/Profile.vue","webpack:///./src/views/Profile.vue?3600","webpack:///../../../src/components/VSkeletonLoader/VSkeletonLoader.ts","webpack:///./src/views/Profile.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_l","p","i","key","_v","_s","attrs","staticRenderFns","data","profile","computed","user","$store","getters","getUser","mixins","name","props","boilerplate","loading","tile","transition","type","types","default","role","$attrs","classes","elevationClasses","isLoading","rootTypes","actions","article","avatar","button","card","chip","heading","image","paragraph","sentences","table","text","methods","genBone","genBones","bone","generator","Array","length","genStructure","children","mapBones","genSkeleton","on","afterEnter","beforeEnter","beforeLeave","leaveCancelled","resetStyles","bones","onBeforeEnter","el","display","onBeforeLeave","h","class","style","undefined","component","VCard","VCardText","VContainer","VSimpleTable","VSkeletonLoader"],"mappings":"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","file":"js/chunk-3a3ae44e.b6bdbec0.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[(_vm.profile)?_c('v-card',{staticClass:\"pa-5\"},[_c('v-card-text',[_c('v-simple-table',[_c('tbody',_vm._l((_vm.profile),function(p,i){return _c('tr',{key:i},[_c('td',[_vm._v(_vm._s(i))]),_c('td',[_vm._v(_vm._s(p))])])}),0)])],1)],1):_c('v-skeleton-loader',{attrs:{\"type\":\"card-avatar, article, actions\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container>\r\n    <v-card v-if=\"profile\" class=\"pa-5\">\r\n      <v-card-text>\r\n        <v-simple-table>\r\n          <tbody>\r\n            <tr v-for=\"(p, i) in profile\" :key=\"i\">\r\n              <td>{{ i }}</td>\r\n              <td>{{ p }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </v-simple-table>\r\n      </v-card-text>\r\n    </v-card>\r\n    <v-skeleton-loader\r\n      v-else\r\n      type=\"card-avatar, article, actions\"\r\n    ></v-skeleton-loader>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { auth } from \"@/plugins/firebase\";\r\nexport default {\r\n  async beforeRouteEnter(to, from, next) {\r\n    const res = await fetch(\r\n      `https://script.google.com/macros/s/AKfycbzFgqSH8kZIIIKtH6C7P7TzEMfJgXoiNP2VdCZf7n_hLxyq3OLFMEUtuBSgIY3agt7i/exec?sheet=${auth.currentUser.photoURL}&type=Initial Data`\r\n    );\r\n    const data = await res.json();\r\n    next((vm) => {\r\n      vm.profile = data.routines[0];\r\n    });\r\n  },\r\n  data() {\r\n    return {\r\n      profile: null,\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    user() {\r\n      return this.$store.getters.getUser;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Profile.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Profile.vue?vue&type=script&lang=js&\"","// Styles\nimport './VSkeletonLoader.sass'\n\n// Mixins\nimport Elevatable from '../../mixins/elevatable'\nimport Measurable from '../../mixins/measurable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { getSlot } from '../../util/helpers'\nimport { PropValidator } from 'vue/types/options'\n\nexport interface HTMLSkeletonLoaderElement extends HTMLElement {\n  _initialStyle?: {\n    display: string | null\n    transition: string\n  }\n}\n\n/* @vue/component */\nexport default mixins(\n  Elevatable,\n  Measurable,\n  Themeable,\n).extend({\n  name: 'VSkeletonLoader',\n\n  props: {\n    boilerplate: Boolean,\n    loading: Boolean,\n    tile: Boolean,\n    transition: String,\n    type: String,\n    types: {\n      type: Object,\n      default: () => ({}),\n    } as PropValidator<Record<string, string>>,\n  },\n\n  computed: {\n    attrs (): object {\n      if (!this.isLoading) return this.$attrs\n\n      return !this.boilerplate ? {\n        'aria-busy': true,\n        'aria-live': 'polite',\n        role: 'alert',\n        ...this.$attrs,\n      } : {}\n    },\n    classes (): object {\n      return {\n        'v-skeleton-loader--boilerplate': this.boilerplate,\n        'v-skeleton-loader--is-loading': this.isLoading,\n        'v-skeleton-loader--tile': this.tile,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      }\n    },\n    isLoading (): boolean {\n      return !('default' in this.$scopedSlots) || this.loading\n    },\n    rootTypes (): Record<string, string> {\n      return {\n        actions: 'button@2',\n        article: 'heading, paragraph',\n        avatar: 'avatar',\n        button: 'button',\n        card: 'image, card-heading',\n        'card-avatar': 'image, list-item-avatar',\n        'card-heading': 'heading',\n        chip: 'chip',\n        'date-picker': 'list-item, card-heading, divider, date-picker-options, date-picker-days, actions',\n        'date-picker-options': 'text, avatar@2',\n        'date-picker-days': 'avatar@28',\n        heading: 'heading',\n        image: 'image',\n        'list-item': 'text',\n        'list-item-avatar': 'avatar, text',\n        'list-item-two-line': 'sentences',\n        'list-item-avatar-two-line': 'avatar, sentences',\n        'list-item-three-line': 'paragraph',\n        'list-item-avatar-three-line': 'avatar, paragraph',\n        paragraph: 'text@3',\n        sentences: 'text@2',\n        table: 'table-heading, table-thead, table-tbody, table-tfoot',\n        'table-heading': 'heading, text',\n        'table-thead': 'heading@6',\n        'table-tbody': 'table-row-divider@6',\n        'table-row-divider': 'table-row, divider',\n        'table-row': 'table-cell@6',\n        'table-cell': 'text',\n        'table-tfoot': 'text@2, avatar@2',\n        text: 'text',\n        ...this.types,\n      }\n    },\n  },\n\n  methods: {\n    genBone (text: string, children: VNode[]) {\n      return this.$createElement('div', {\n        staticClass: `v-skeleton-loader__${text} v-skeleton-loader__bone`,\n      }, children)\n    },\n    genBones (bone: string): VNode[] {\n      // e.g. 'text@3'\n      const [type, length] = bone.split('@') as [string, number]\n      const generator = () => this.genStructure(type)\n\n      // Generate a length array based upon\n      // value after @ in the bone string\n      return Array.from({ length }).map(generator)\n    },\n    // Fix type when this is merged\n    // https://github.com/microsoft/TypeScript/pull/33050\n    genStructure (type?: string): any {\n      let children = []\n      type = type || this.type || ''\n      const bone = this.rootTypes[type] || ''\n\n      // End of recursion, do nothing\n      /* eslint-disable-next-line no-empty, brace-style */\n      if (type === bone) {}\n      // Array of values - e.g. 'heading, paragraph, text@2'\n      else if (type.indexOf(',') > -1) return this.mapBones(type)\n      // Array of values - e.g. 'paragraph@4'\n      else if (type.indexOf('@') > -1) return this.genBones(type)\n      // Array of values - e.g. 'card@2'\n      else if (bone.indexOf(',') > -1) children = this.mapBones(bone)\n      // Array of values - e.g. 'list-item@2'\n      else if (bone.indexOf('@') > -1) children = this.genBones(bone)\n      // Single value - e.g. 'card-heading'\n      else if (bone) children.push(this.genStructure(bone))\n\n      return [this.genBone(type, children)]\n    },\n    genSkeleton () {\n      const children = []\n\n      if (!this.isLoading) children.push(getSlot(this))\n      else children.push(this.genStructure())\n\n      /* istanbul ignore else */\n      if (!this.transition) return children\n\n      /* istanbul ignore next */\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n        // Only show transition when\n        // content has been loaded\n        on: {\n          afterEnter: this.resetStyles,\n          beforeEnter: this.onBeforeEnter,\n          beforeLeave: this.onBeforeLeave,\n          leaveCancelled: this.resetStyles,\n        },\n      }, children)\n    },\n    mapBones (bones: string) {\n      // Remove spaces and return array of structures\n      return bones.replace(/\\s/g, '').split(',').map(this.genStructure)\n    },\n    onBeforeEnter (el: HTMLSkeletonLoaderElement) {\n      this.resetStyles(el)\n\n      if (!this.isLoading) return\n\n      el._initialStyle = {\n        display: el.style.display,\n        transition: el.style.transition,\n      }\n\n      el.style.setProperty('transition', 'none', 'important')\n    },\n    onBeforeLeave (el: HTMLSkeletonLoaderElement) {\n      el.style.setProperty('display', 'none', 'important')\n    },\n    resetStyles (el: HTMLSkeletonLoaderElement) {\n      if (!el._initialStyle) return\n\n      el.style.display = el._initialStyle.display || ''\n      el.style.transition = el._initialStyle.transition\n\n      delete el._initialStyle\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-skeleton-loader',\n      attrs: this.attrs,\n      on: this.$listeners,\n      class: this.classes,\n      style: this.isLoading ? this.measurableStyles : undefined,\n    }, [this.genSkeleton()])\n  },\n})\n","import { render, staticRenderFns } from \"./Profile.vue?vue&type=template&id=43e75324&scoped=true&\"\nimport script from \"./Profile.vue?vue&type=script&lang=js&\"\nexport * from \"./Profile.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"43e75324\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VSimpleTable } from 'vuetify/lib/components/VDataTable';\nimport { VSkeletonLoader } from 'vuetify/lib/components/VSkeletonLoader';\ninstallComponents(component, {VCard,VCardText,VContainer,VSimpleTable,VSkeletonLoader})\n"],"sourceRoot":""}